@charset "UTF-8";
/* 주석2 */
/********************************************* 
    [ 사스 핵심 사용법 ]

    1. 사스 확장자별 파일구분
        (1) .scss - 사스관리파일
            (-> .sass 확장자는 중괄호,세미콜론 사용하지않는
            문법 사스파일임. 우리는 scss파일을 사용할 것임)
        (2) .css.map - 사스파일과 CSS연결정보 파일
        (3) .css - 실제로 적용되는 컴파일된 CSS

    2. 사스파일 컴파일하기
        ->Live Sass Compiler 확장프로그램 설치후
        하단 "Watch Sass" 클릭하여 작동시킴

        -> 에러가 없는한!!! 컴파일하여 같은 이름의
        css파일을 생성함 "Watching..."상태가됨.
        다시클릭시 실시간 변환상태가 꺼진다.

        -> 에러 발생시 컴파일이 안되고 cmd창에
        에러메시지가 나온다!

    3. 주요 문법
    (1) 네스팅 기법 
        - 선택자 중괄호안에 다른 하위선택을 하는것!
        예) div{h1{color:red;}}
        -> 장점: 같은 셋팅요소를 선택시 중복된
        선택자의 반복을 하지 않아도 된다!
        또한 같은 구성요소를 묶어서 셋팅 관리가능!

    (2) 속성접두어 묶음기법
        - 반복되는 같은 종류의 하위속성의 접두어를
        한번만 사용하여 셋팅을 묶어주는 방법
        예) font: {size:12px; weight:bold;}

    (3) 변수사용기법
        - 동일하게 사용할 값을 변수에 넣고 디자인을 배치함
        - 변수사용법-> $변수명: 값
        - 변수명은 모두 붙여쓰며 구분단어는
        캐믈케이스(camelCase) 또는 
        캐밥케이스(camel-case)를 사용한다
        - 변수의 범위는 변수를 선언후 하위로 상속되어 값이유지됨

    (4) 파일 분리기법 : @import
        - 부분파일을 분리하여 공통모듈로 합쳐서 사용한다!
        - 부분파일명은 사스에서 앞에 언더바를 붙여서 사용하는것이
        원칙이지만 언더바를 안써도 기본적으로 부분파일처리해줌!
        - 파일호출시 확장자 생략가능함! 
        (자동으로 앞에 언더바와 확장자를 생략해준다!)
        예) @import "reset";
        - 일반 CSS @import 와는 다른점은 http요청을 하지 않음

    (5) 믹스인 : 일종의 공통 CSS코드를 리턴하는 함수
        1) 셋팅형식

        [1] 전달변수가 없는 믹스인
        @mixin 믹스인이름 {CSS코드}

        [2] 전달변수가 있는 믹스인
        @mixin 믹스인이름(변수) {CSS코드}

        [3] 전달변수가 있고 기본값도 있는 믹스인
        @mixin 믹스인이름(변수:기본값) {CSS코드}

        2) 믹스인 호출방법 : 믹스인을 포함하라!(@include)
        -> @include 믹스인이름;
        -> @include 믹스인이름(전달값);

    (6) 네스팅 이어붙이기 기법(&)
        - 가상요소, 가상클래스, 특정클래스를
            현재 선택요소에 셋팅하는 방법임!
        - &(앰퍼센드)는 현재 선택요소 자신을 가리킴!

    (7) 반복코드 확장 : @extend (extend는 연장하다,확장하다)
        1) 사용이유 : 반복되는 같은 셋팅의 클래스를 쉽게 도입한다
        2) 사용방법 : 선택자 코드 안에 (@extend 클래스명) 형식
        3) 공통코드 외에 다른 셋팅속성은 하단에 추가로 구현한다!
        4) 장점 : 공통코드 적용을 위해 각 요소에 클래스를 일일히
        주지 않아도 공통코드를 적용할 수 있다!



*********************************************/
/* reset css s */
* {
  margin: 0;
  padding: 0;
  font: inherit;
  color: inherit;
}

*,
:after,
:before {
  box-sizing: border-box;
  flex-shrink: 0;
}

:root {
  -webkit-tap-highlight-color: transparent;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
       text-size-adjust: 100%;
  cursor: default;
  line-height: 1.5;
  overflow-wrap: break-word;
  word-break: break-word;
  -moz-tab-size: 4;
    -o-tab-size: 4;
       tab-size: 4;
}

html,
body {
  height: 100%;
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

button {
  background: none;
  border: 0;
  cursor: pointer;
}

a {
  text-decoration: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

ul,
ol {
  list-style: none;
}

address,
em {
  font-style: normal;
}

fieldset {
  border: 0;
}

iframe {
  overflow: hidden;
  margin: 0;
  padding: 0;
  border: 0;
}

/* reset css e */
.wrapper {
  max-width: 1000px;
  margin: 0 auto;
}

.top-area {
  color: #a31212;
}
.top-area h1 {
  color: aqua;
  font-size: 40px;
  font-family: "Times New Roman";
  font-weight: 700;
  text-align: center;
  text-decoration: underline;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.4901960784);
  padding: 2vw;
  margin-bottom: 40px;
  background-color: #e28c2a;
  background-image: url("../images/flower.png");
  background-position: center;
  background-size: 100%;
}
.top-area h1::before {
  content: "😘";
}

.main-area section {
  border-color: blue;
  border-style: dashed;
  border-width: 7px;
  margin-bottom: 20px;
  padding: 20px;
}
.main-area section h3 {
  color: navy;
  font-size: 40px;
  font-family: "Times New Roman";
  font-weight: 700;
  text-align: center;
  text-decoration: underline;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.4901960784);
}
.main-area section ul,
.main-area section ol,
.main-area section p {
  line-height: 2;
  font-size: 24px;
}
.main-area section ul li,
.main-area section ol li,
.main-area section p li {
  text-decoration: underline;
  text-underline-offset: 10px;
  text-decoration-thickness: 5px;
  text-decoration-color: #204ffc;
  text-align: center;
}
.main-area section ul li:first-child,
.main-area section ol li:first-child,
.main-area section p li:first-child {
  color: orchid;
  font-weight: bold;
  font-size: 30px;
  text-shadow: 1px 0 #000, -1px 0 #000, 0 1px #000, 0 -1px #000;
}
.main-area section ul li::before,
.main-area section ol li::before,
.main-area section p li::before {
  content: "😘";
}

.box-basic, .bottom-title, .button-box {
  text-align: center;
  padding: 20px 0;
}

.button-basic, .button-report {
  display: inline-block;
  border: 1px solid #222;
  border-radius: 20px;
  padding: 15px 30px;
  font-size: 20px;
  cursor: pointer;
  margin-left: 20px;
}
.button-basic:hover, .button-report:hover {
  background-color: hotpink;
  text-decoration: overline;
  text-decoration-style: wavy;
}

.button-report {
  background-color: orange;
  color: #fff;
}

.bottom-title {
  color: red;
  font-size: 40px;
  font-family: "Times New Roman";
  font-weight: 700;
  text-align: center;
  text-decoration: underline;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.4901960784);
}/*# sourceMappingURL=main.css.map */